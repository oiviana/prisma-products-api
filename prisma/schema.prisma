// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  clientId    String   @id @default(uuid()) @map("client_id")
  clientCnpj  String   @map("client_cnpj")
  clientName  String   @map("client_name")
  clientEmail String   @map("client_email")
  createdAt   DateTime @updatedAt @map("created_at")

  addresses Address[] //one client has many addresses
  orders    Order[]

  @@map("clients")
}

model Address {
  addressId  String   @id @default(uuid()) @map("address_id")
  street     String
  number     String
  postalCode String   @map("postal_code")
  city       String
  state      String
  createdAt  DateTime @updatedAt @map("created_at")

  clientId String @map("client_id") //client foreing key
  client   Client @relation(fields: [clientId], references: [clientId]) //client relation tables

  @@map("addresses")
}

model Product {
  productId          String   @id @default(uuid()) @map("product_id")
  productName        String   @map("product_name")
  productDescription String   @map("product_description")
  productCategory    String   @map("product_category")
  productPrice       Decimal  @map("product_price") @db.Decimal(10, 2)
  createdAt          DateTime @updatedAt @map("created_at")

  stock Stock?

  @@map("products")
}

model Stock {
  stockId       String  @id @default(uuid()) @map("stock_id")
  stockQuantity Int     @map("stock_quantity")
  productId     String  @unique @map("product_id")
  product       Product @relation(fields: [productId], references: [productId])

  @@map("stocks")
}

model Order {
  orderId     String  @id @default(uuid()) @map("order_id")
  orderStatus String  @map("order_status")
  clientId    String? @map("client_id")
  Client      Client? @relation(fields: [clientId], references: [clientId])

  @@map("orders")
}
